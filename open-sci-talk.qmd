---
title: "Making Sausage"
subtitle: "How and why open source scientific software gets made -- and what keeps us from making more"
author:
  - name: "**Michael J Mahoney**"
    orcid: 0000-0003-2402-304X
    email: mjmahone@esf.edu
    url: https://mm218.dev
format: 
  revealjs: 
    standalone: true
    center: true
    slide-number: false
    overview: true
    width: 1280
    height: 720
    theme: [default, custom.scss]
    footer: "Talk for ESIP Community Fellows -- October 2023"
---


## About Me

```{r}
#| include: false
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
```


::: columns
::: {.column width="50%"}
-   Mike Mahoney

-   ESIP Community Fellow (IT&I, ML)

-   PhD candidate in environmental science

-   Research assistant, CAFRI

-   These slides: [mm218.dev/esip2023](https://mm218.dev/esip2023)
:::

::: {.column width="10%"}
:::

::: {.column width="40%"}
![](me.jpeg)
:::
:::

---

> All users of the program have access to the source code of the program, and are allowed to redistribute, modify, and use the program as they see fit.

---

![](fragstats.png){.quarto-figure-center}

---

![](lsm.png){.quarto-figure-center}

---

![](lsm_diffs.png){.quarto-figure-center}

---

![](lsm_diffs_hl.png){.quarto-figure-center}

---

> "Given enough eyeballs, all bugs are shallow."
>
> -- Eric S. Raymond, _The Cathedral and the Bazaar_

---

![](open-source-initiative.jpeg){.quarto-figure-center}

# Open Source is Lonely

## landscapemetrics

```{r}
library(ggplot2)
read.table("lsm.txt", sep = "\t") |> 
  dplyr::mutate(
    V2 = factor(V2, rev(V2))
  ) |> 
  ggplot(aes(V2, V1)) + 
  geom_col() + 
  theme_minimal() + 
  theme(panel.grid = element_blank()) + 
  labs(x = "", y = "# of commits") + 
  coord_flip()
```


## dplyr

```{r}
read.table("dplyr.txt", sep = "\t") |> 
  dplyr::mutate(
    V2 = factor(V2, rev(V2))
  ) |> 
  ggplot(aes(V2, V1)) + 
  geom_col() + 
  theme_minimal() + 
  theme(
    panel.grid = element_blank(),
    axis.text.y = element_blank()
  ) + 
  labs(x = "", y = "# of commits") + 
  coord_flip()
```

## dplyr

```{r}
read.table("dplyr.txt", sep = "\t") |> 
  head(50) |> 
  dplyr::mutate(
    V2 = factor(V2, rev(V2))
  ) |> 
  ggplot(aes(V2, V1)) + 
  geom_col() + 
  theme_minimal() + 
  theme(
    panel.grid = element_blank()
  ) + 
  labs(x = "", y = "# of commits") + 
  coord_flip()
```

## pandas

```{r}
read.table("pandas.txt", sep = "\t") |> 
  dplyr::mutate(
    V2 = factor(V2, rev(V2))
  ) |> 
  ggplot(aes(V2, V1)) + 
  geom_col() + 
  theme_minimal() + 
  theme(
    panel.grid = element_blank(),
    axis.text.y = element_blank()
  ) + 
  labs(x = "", y = "# of commits") + 
  coord_flip()
```

## pandas

```{r}
read.table("pandas.txt", sep = "\t") |> 
  head(50) |> 
  dplyr::mutate(
    V2 = factor(V2, rev(V2))
  ) |> 
  ggplot(aes(V2, V1)) + 
  geom_col() + 
  theme_minimal() + 
  theme(
    panel.grid = element_blank()
  ) + 
  labs(x = "", y = "# of commits") + 
  coord_flip()
```

# Open source is a long-tailed phenomenon

## All R Packages (n = 26,039)

```{r}
downloads <- read.csv("download_stats.csv")

downloads |> 
  dplyr::mutate(
    package = factor(package, package)
  ) |> 
  ggplot(aes(package, n)) + 
  geom_col() + 
  theme_void()
```

## 95% of downloads (n = 1,341)

```{r}
downloads |> 
  dplyr::filter(
    cumsum(n) <= sum(n) * 0.95
  ) |> 
  dplyr::mutate(
    package = factor(package, package)
  ) |> 
  ggplot(aes(package, n)) + 
  geom_col() + 
  theme_void()
```


## 90% of downloads (n = 607)

```{r}
downloads |> 
  dplyr::filter(
    cumsum(n) <= sum(n) * 0.9
  ) |> 
  dplyr::mutate(
    package = factor(package, package)
  ) |> 
  ggplot(aes(package, n)) + 
  geom_col() + 
  theme_void() + 
  labs()
```



## 90% of downloads (n = 607)

```{r}
ninety <- downloads |> 
  dplyr::filter(
    cumsum(n) <= sum(n) * 0.9
  ) |> 
  dplyr::mutate(
    package = factor(package, package)
  )

ninety |> 
  ggplot(aes(package, n)) + 
  geom_col() + 
  geom_col(data = ninety[ninety$package == "rsample", ], fill = "red") + 
  theme_void() + 
  labs()
```

# Open-source developers are mostly doing something else for a living

# Open-source success is hard to track

# Small, lightweight seed funding can be very impactful

---

![](sf.png){.quarto-figure-center}

---

![](sf_proposal.png){.quarto-figure-center}

# Community groups can help with burnout

---

![](ropensci.png)

---

![](pyopensci.png)

# Value software as a research product

# Cite your software
